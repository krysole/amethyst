--
-- The Amethyst Programming Language
--
-- Copyright 2020 Lorenz Pretterhofer <krysole@alexicalmistake.com>
--
-- Permission to use, copy, modify, and distribute this work for any
-- purpose with or without fee is hereby granted, provided that the above
-- copyright notice and this permission notice appear in all copies.
--
-- THE WORK IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-- WITH REGARD TO THIS WORK INCLUDING ALL IMPLIED WARRANTIES OF
-- MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-- ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-- WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-- ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-- OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS WORK.
--

class Array (Object) {

  public static [*elements] do elements

  private : private root    = null
  private : private tail    = null
  public  : private count   = 0
  private : private version = 0

  public [index] {
    ...
  }

  public last(index) {
    if index ~= nil
    then self[count - 1 - index]
    else self[count - 1 - 0]
  }
  public last(index) = value {
    if index ~= nil
    then self[count - 1 - index] = value
    else self[count - 1 - 0]     = value
  }
  public last(index) # value {
    if index ~= nil
    then self[count - 1 - index] # value
    else self[count - 1 - 0]     # value
  }

  public first do self[0]

  public first = value do self[0] = value

  public first # value do self[0] # value

}
